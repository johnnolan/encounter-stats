name: "[Workflow] Release"

on:
  release:
    types: [released]

jobs:
  create_changelog_commit:
    name: Create and commit Changelog
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}

    - name: Update Changelog
      uses: stefanzweifel/changelog-updater-action@v1
      with:
        latest-version: ${{ github.event.release.tag_name }}
        release-notes: ${{ github.event.release.body }}

    - name: Commit updated CHANGELOG
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        branch: ${{ github.event.release.target_commitish }}
        commit_message: Update CHANGELOG
        file_pattern: CHANGELOG.md

  create_tag_publish:
    name: Build assets and Publish to release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: ['create_changelog_commit']
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'

    - name: Cache yarn dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: modules-${{ hashFiles('yarn.lock') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Build Module
      run: yarn run build
    
    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{github.event.release.tag_name}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip

    # Create a zip file with all files required by the module to add to the release
    - run: zip -r ./module.zip module.json CHANGELOG.md LICENSE dist/ languages/ templates/ packs/

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ github.event.release.name }}
        draft: ${{ github.event.release.unpublished }}
        prerelease: ${{ github.event.release.prerelease }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./module.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}
